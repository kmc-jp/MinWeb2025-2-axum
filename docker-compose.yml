services:
    backend:
        image: rust:latest
        build:
            context: ./backend
        volumes:
            - ./backend:/usr/src/app
        ports:
            - "3000:3000"
        environment:
            - DATABASE_URL=mysql://user:password@mysql:3306/minweb
            - RUST_LOG=debug
        depends_on:
            mysql:
                condition: service_healthy
        restart: unless-stopped
        networks:
            - app-network
        working_dir: /usr/src/app
        command: cargo run ./src/main.rs
    frontend:
        image: node:20-alpine
        working_dir: /app
        volumes:
            - ./frontend:/app
            - frontend_build:/var/www/html
        environment:
            - REACT_APP_API_URL=http://localhost:3000/api
        command: sh -c "npm install && npm run build && cp -r build/* /var/www/html/"
        depends_on:
            - backend
        networks:
            - app-network

    nginx:
        image: nginx:alpine
        ports:
            - "80:80"
        volumes:
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/logs:/var/log/nginx
            - frontend_build:/var/www/html
        depends_on:
            - backend
            - frontend
        restart: unless-stopped
        networks:
            - app-network

    mysql:
        image: mysql:8.0
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/todo-axum-mysql
            - ./mysql/init:/docker-entrypoint-initdb.d
        environment:
            - MYSQL_ROOT_PASSWORD=rootpassword
            - MYSQL_DATABASE=minweb
            - MYSQL_USER=user
            - MYSQL_PASSWORD=password
            - TZ=Asia/Tokyo
            - PGTZ=Asia/Tokyo
        restart: unless-stopped
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "user", "--password=password"]
            interval: 10s
            timeout: 5s
            retries: 5

volumes:
    mysql_data:
    frontend_build:

networks:
    app-network:
        driver: bridge